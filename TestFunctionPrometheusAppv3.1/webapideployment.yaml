apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: function-<FunctionName>-http
  name: function-<FunctionName>-http
  namespace: ingress-nginx
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: function-<FunctionName>-http
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: function-<FunctionName>-http
    spec:
      containers:
      - name: function-<FunctionName>-http
        image: <ACRName>.azurecr.io/function-<ContainerName>
        imagePullPolicy: Always
        env:
        - name: METRICS_PATH
          value: "/metrics"
        - name: EXPOSE_HTTP_METRICS
          value: "false"
        - name: METRICS_PREFIX
          value: "<FunctionName>"
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: <ACRSecret>
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: function-<FunctionName>-http
  namespace: ingress-nginx
  annotations:
    prometheus.io/port: "80"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: function-<FunctionName>-http
  sessionAffinity: None
  type: ClusterIP

